<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>蓝桥杯单片机学习(LED)</title>
      <link href="/2022/12/18/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%8D%95%E7%89%87%E6%9C%BA/LED/"/>
      <url>/2022/12/18/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%8D%95%E7%89%87%E6%9C%BA/LED/</url>
      
        <content type="html"><![CDATA[<h2 id="训练要求"><a href="#训练要求" class="headerlink" title="训练要求"></a>训练要求</h2><p>先实现8路LED灯的闪烁3遍，然后依次点亮led灯，最后依次熄灭</p><h2 id="训练重点"><a href="#训练重点" class="headerlink" title="训练重点"></a>训练重点</h2><p>1、 74HC138 三八译码器<br>2、 74HC573 锁存器<br>3、 74HC02 或非门<br>4、 LED跑马灯<br>5、 工程建立</p><h2 id="138译码器"><a href="#138译码器" class="headerlink" title="138译码器"></a>138译码器</h2><p>三个输入控制八路互斥的低有效输出<br>C     | B     | A   | 输出<br>——-  | ——-|——-|——-<br>1      | 0    |0    | Y4<br>1      | 0    |1    | Y5<br>1      | 1    |0    | Y6<br>1      | 1    |1    |  Y7</p><p>这个其实就是2进制<br>000 Y0<br>001 Y1<br>010 Y2<br>011 Y3<br>100 Y4 </p><p>而74HC138是通过p25 26 27来控制的，所以就是配置这3个脚的电平<br>而Yx这些都分别控制我们所需要的硬件</p><h2 id="锁存器"><a href="#锁存器" class="headerlink" title="锁存器"></a>锁存器</h2><p>· 八路三态输出的非反转透明锁存器<br>· 当锁存使能端 LE 为高时，这些数据是同步的。当锁存使能变低时，符合建立时间和保持时间的数据会被锁存</p><p>我们把跳线帽置于上侧，我们可以看到，在电路图里，我们是需要让 Y4C上电的</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;reg52.h&quot; </span><br><span class="line"></span><br><span class="line">//对HC138的脚进行引入</span><br><span class="line">sbit HC138_A = P2^5;</span><br><span class="line">sbit HC138_B = P2^6;</span><br><span class="line">sbit HC138_C = P2^7;</span><br><span class="line"></span><br><span class="line">//  延时函数</span><br><span class="line">void Delay(unsigned int t)</span><br><span class="line">&#123;</span><br><span class="line">while(t--);</span><br><span class="line">while(t++);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// </span><br><span class="line">void LEDRuning()</span><br><span class="line">&#123;</span><br><span class="line">unsigned char i;</span><br><span class="line">HC138_C = 1;</span><br><span class="line">HC138_B = 0;</span><br><span class="line">HC138_A = 0;  // Y4打开</span><br><span class="line"></span><br><span class="line">for (i = 0; i &lt; 3 ; i++)</span><br><span class="line">&#123;</span><br><span class="line">P0 = 0X00; // </span><br><span class="line">Delay(60000);</span><br><span class="line">Delay(60000);</span><br><span class="line">P0 = 0xff; // ¹ØµÆ</span><br><span class="line">Delay(60000);</span><br><span class="line">Delay(60000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 按顺序点亮灯</span><br><span class="line">for (i = 1;i &lt;= 8;i++)</span><br><span class="line">&#123;</span><br><span class="line">P0 = 0xff &lt;&lt; i; // È«Ãð£¬Ã¿´ÎµãÁÁi¸ö£¬µ«ÊÇ²»ÄÜÒ»¸ö¶¼²»ÁÁ£¬¾ÍÒª´Ó1¿ªÊ¼</span><br><span class="line">Delay(60000);</span><br><span class="line">  Delay(60000);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for (i = 1;i&lt;=8;i++)</span><br><span class="line">&#123;</span><br><span class="line">P0 = ~(0xff &lt;&lt; i);</span><br><span class="line">Delay(60000);</span><br><span class="line">  Delay(60000);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 主函数运行我们上面编好的函数</span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">   while(1)</span><br><span class="line">   &#123;</span><br><span class="line"> LEDRuning();</span><br><span class="line"> </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="蜂鸣器与继电器"><a href="#蜂鸣器与继电器" class="headerlink" title="蜂鸣器与继电器"></a>蜂鸣器与继电器</h3><p>需要知道我们是通过Y5 和 达林顿管来使能的</p><h3 id="数码管"><a href="#数码管" class="headerlink" title="数码管"></a>数码管</h3><p>Y7C 开启abcd..每个数码管的灯<br>Y6C 开启1234  每个管的位置<br>段码： unsigned char code SMG_Duanma[18]=<br>{0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,<br>0x88,0x80,0xc5,0xc6,0xc0,0x86,0x8e,0xbf,0x7f<br>}</p><h4 id="138译码器选择"><a href="#138译码器选择" class="headerlink" title="138译码器选择"></a>138译码器选择</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">void  InitHC138(unsigned cahr n)</span><br><span class="line">&#123;</span><br><span class="line">switch(n)</span><br><span class="line">&#123;</span><br><span class="line">case 4:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0x80;</span><br><span class="line">break;</span><br><span class="line">case 5:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0xa0;</span><br><span class="line">break;</span><br><span class="line">case 6:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0xc0;</span><br><span class="line">break;</span><br><span class="line">case 7:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0xe0;</span><br><span class="line">break;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="数码管显示"><a href="#数码管显示" class="headerlink" title="数码管显示"></a>数码管显示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">void ShowSMG()</span><br><span class="line">&#123;</span><br><span class="line">InitHC138(6); // 数码管位置</span><br><span class="line">P0 = 0x01;   // 第一个</span><br><span class="line">InitHc138(7) ;// 数码管显示</span><br><span class="line">P0 = 0x82;   // 6</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用上面的这些函数就可以直接显示了<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">void ShowSMG_bit(unsigned char dat,unsigned pow)</span><br><span class="line">&#123;</span><br><span class="line">InitHC138(6);// 数码管位置</span><br><span class="line">P0 = 0x01 &lt;&lt; pos;   // 利用位移显示我们选择的位置</span><br><span class="line"></span><br><span class="line">InitHc138(7); // 数码管显示</span><br><span class="line">P0 = dat;   // 显示需要的数字</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><p>8个数码管分别显示0-9的值，然后所有数码管同时显示 0-f的值，如此往复<br>也就是需要我们静态显示</p><p>延时函数<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">void delay(unsigned int t)</span><br><span class="line">&#123;</span><br><span class="line">while(t--);</span><br><span class="line">while(t++);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">void SMG_Static()</span><br><span class="line">&#123;</span><br><span class="line">unsigned cahr i,j;</span><br><span class="line">for(i = 0 ; i&lt;8;i++)</span><br><span class="line">&#123;</span><br><span class="line">for(j=0;j&lt;10;j++)</span><br><span class="line">&#123;</span><br><span class="line">ShowSMG_bit(SMG_duanma[j],i);</span><br><span class="line">delay(6000);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//上面的函数就可以实现每个数码管都显示数字</span><br><span class="line"></span><br><span class="line">for (k = 0 ; k&lt;16;k++)</span><br><span class="line">&#123;</span><br><span class="line">InitHC138(6);// 数码管位置</span><br><span class="line">P0 = 0xff; // 全部打开</span><br><span class="line"></span><br><span class="line">    InitHC138(7);</span><br><span class="line">P0 = SMG_duanma[j];</span><br><span class="line">delay(6000);</span><br><span class="line">delay(6000);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数码管动态显示"><a href="#数码管动态显示" class="headerlink" title="数码管动态显示"></a>数码管动态显示</h3><p>利用视觉余晖的效果，硬件的内容没有差别</p><p>// 选择锁存器<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">void  SelectHC573(unsigned char channel)</span><br><span class="line">&#123;</span><br><span class="line">switch(channel)</span><br><span class="line">&#123;</span><br><span class="line">case 4:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0x80;</span><br><span class="line">break;</span><br><span class="line">case 5:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0xa0;</span><br><span class="line">break;</span><br><span class="line">case 6:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0xc0;</span><br><span class="line">break;</span><br><span class="line">case 7:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0xe0;</span><br><span class="line">break;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">void displaySMG_bit(unsigned char value, unsigned cahr pos)</span><br><span class="line">&#123;</span><br><span class="line">SelectHC573(6);</span><br><span class="line">p0 = 0x01 &lt;&lt; pos ;</span><br><span class="line">SelectHC573(7);</span><br><span class="line">p0 = value;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>动态显示主代码<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">unsinged char yu = 1;</span><br><span class="line">void display_dynamic()</span><br><span class="line">&#123;</span><br><span class="line">displaySMG_bit(SMMG_duanma[2],0);</span><br><span class="line">delay(500);</span><br><span class="line">displaySMG_bit(SMMG_duanma[0],1);</span><br><span class="line">delay(500);</span><br><span class="line">displaySMG_bit(SMMG_duanma[2],2);</span><br><span class="line">delay(500);</span><br><span class="line">displaySMG_bit(SMMG_duanma[2],3);</span><br><span class="line">delay(500);</span><br><span class="line"></span><br><span class="line">displaySMG_bit(SMMG_duanma[16],4);</span><br><span class="line">delay(500);</span><br><span class="line">displaySMG_bit(SMMG_duanma[16],5);</span><br><span class="line">delay(500);</span><br><span class="line"></span><br><span class="line">displaySMG_bit(SMMG_duanma[yu/10],6);</span><br><span class="line">delay(500);</span><br><span class="line">displaySMG_bit(SMMG_duanma[yu%10],7);</span><br><span class="line">delay(500);</span><br><span class="line">&#125;</span><br><span class="line">void delay_smg(unsigned char t)</span><br><span class="line">&#123;</span><br><span class="line">while(t--)</span><br><span class="line">&#123;</span><br><span class="line">display_dynamic(); //在这里使用的话 就可以动态显示了</span><br><span class="line">// 因为主函数是一条一条执行的，所以我们必须让他一直执行下去</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">while(1)</span><br><span class="line">&#123;</span><br><span class="line">display_dynamic();</span><br><span class="line">yu++;</span><br><span class="line">if(yu &gt; 12)</span><br><span class="line">&#123;</span><br><span class="line">yu = 1;</span><br><span class="line">&#125;</span><br><span class="line">delay_smg(200);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="独立按键的基本操作以及应用"><a href="#独立按键的基本操作以及应用" class="headerlink" title="独立按键的基本操作以及应用"></a>独立按键的基本操作以及应用</h2><p>操作:<br>· 按下s7点亮L1指示灯，松开熄灭<br>· S6 S5 S4 分别对应l2 l3 l4 , 都要进行去抖操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">include &quot;reg52.h&quot;</span><br><span class="line"></span><br><span class="line">sbit s7 = p3^0;</span><br><span class="line">sbit s7 = p3^1;</span><br><span class="line">sbit s7 = p3^2;</span><br><span class="line">sbit s7 = p3^3;</span><br><span class="line"></span><br><span class="line">sbit l1 = p0^0;</span><br><span class="line">sbit l2 = p0^1; </span><br><span class="line">sbit l3 = p0^2;</span><br><span class="line">sbit l4 = p0^3;</span><br><span class="line">sbit l5 = p0^4;</span><br><span class="line">sbit l6 = p0^5;</span><br><span class="line"></span><br><span class="line">void selecthc573(unsigned char chanel)</span><br><span class="line">&#123;</span><br><span class="line">switch(channel)</span><br><span class="line">&#123;</span><br><span class="line">case 4:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0x80;</span><br><span class="line">break;</span><br><span class="line">case 5:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0xa0;</span><br><span class="line">break;</span><br><span class="line">case 6:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0xc0;</span><br><span class="line">break;</span><br><span class="line">case 7:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0xe0;</span><br><span class="line">break;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">// 这一部分看上面的，还是可以用的</span><br><span class="line">void delay_key(unsigned char t)</span><br><span class="line">&#123;</span><br><span class="line">    whlie(t--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void scankeys_alone()</span><br><span class="line">&#123;</span><br><span class="line">if(s7 == 0)</span><br><span class="line">&#123;</span><br><span class="line">delay_key(100);// 去抖延时</span><br><span class="line">if(s7 = 0)</span><br><span class="line">&#123;</span><br><span class="line">l1 = 0;</span><br><span class="line">while(s7 == 0);</span><br><span class="line">l1 = 1</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if(s6 == 0)</span><br><span class="line">&#123;</span><br><span class="line">delay_key(100);// 去抖延时</span><br><span class="line">if(s6 = 0)</span><br><span class="line">&#123;</span><br><span class="line">l1 = 0;</span><br><span class="line">while(s6 == 0);</span><br><span class="line">l1 = 1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if(s5 == 0)</span><br><span class="line">&#123;</span><br><span class="line">delay_key(100);// 去抖延时</span><br><span class="line">if(s5 = 0)</span><br><span class="line">&#123;</span><br><span class="line">l1 = 0;</span><br><span class="line">while(s5 == 0);</span><br><span class="line">l1 = 1</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="扩展任务"><a href="#扩展任务" class="headerlink" title="扩展任务"></a>扩展任务</h4><p>· s7 s6 为选择按键 确定按键控制哪组led等。 按键s5 s4 为控制按键 按键点亮指定led，松开后熄灭</p><p>· s7点亮l1，亮后，s6不可操作，s5控制l3，s4控制l4，再次按下s7，l1灭灯灭，s6可反应</p><p>· s6点亮l2 亮后，s7不可操作，s5控制l5，s4控制l6，再次按下s6，l2灭，s7可反应</p><p>·都没按下时，不可操作</p><p>整体代码<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">include &quot;reg52.h&quot;</span><br><span class="line"></span><br><span class="line">sbit s7 = p3^0;</span><br><span class="line">sbit s7 = p3^1;</span><br><span class="line">sbit s7 = p3^2;</span><br><span class="line">sbit s7 = p3^3;</span><br><span class="line"></span><br><span class="line">sbit l1 = p0^0;</span><br><span class="line">sbit l2 = p0^1; </span><br><span class="line">sbit l3 = p0^2;</span><br><span class="line">sbit l4 = p0^3;</span><br><span class="line">sbit l5 = p0^4;</span><br><span class="line">sbit l6 = p0^5;</span><br><span class="line"></span><br><span class="line">void selecthc573(unsigned char chanel)</span><br><span class="line">&#123;</span><br><span class="line">switch(channel)</span><br><span class="line">&#123;</span><br><span class="line">case 4:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0x80;</span><br><span class="line">break;</span><br><span class="line">case 5:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0xa0;</span><br><span class="line">break;</span><br><span class="line">case 6:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0xc0;</span><br><span class="line">break;</span><br><span class="line">case 7:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0xe0;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 这一部分看上面的，还是可以用的</span><br><span class="line">void delay_key(unsigned char t)</span><br><span class="line">&#123;</span><br><span class="line">    whlie(t--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unsigned char stat_k = 0;  //设置标志位</span><br><span class="line"></span><br><span class="line">void scankeys_alone()</span><br><span class="line">&#123;</span><br><span class="line">if(s7 == 0)</span><br><span class="line">&#123;</span><br><span class="line">delay_key(100);  // 去抖延时</span><br><span class="line">if(s7 ==0)       // 说明按下了</span><br><span class="line">&#123;</span><br><span class="line">if(stat_k == 0)</span><br><span class="line">&#123;</span><br><span class="line">l1 = 0;</span><br><span class="line">stat_l = 1;</span><br><span class="line">&#125;</span><br><span class="line">else if(stat_k == 1)</span><br><span class="line">&#123;</span><br><span class="line">l1 = 1;</span><br><span class="line">        stat_k = 0;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(s6 == 0)</span><br><span class="line">&#123;</span><br><span class="line">delay_key(100);  // 去抖延时</span><br><span class="line">if(s6 = 0)</span><br><span class="line">&#123;</span><br><span class="line">if(stat_k == 0)</span><br><span class="line">&#123;</span><br><span class="line">l2 = 0;</span><br><span class="line">stat_k = 2;</span><br><span class="line">&#125;</span><br><span class="line">else if(stat_k == 2)</span><br><span class="line">&#123;</span><br><span class="line">l2 = 1;</span><br><span class="line">stat_k = 0; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(s5 == 0)</span><br><span class="line">&#123;</span><br><span class="line">delay_key(100);// 去抖延时</span><br><span class="line">if(s5 = 0)</span><br><span class="line">&#123;</span><br><span class="line">if(stat_k == 1)</span><br><span class="line">&#123;</span><br><span class="line">l3 = 0;</span><br><span class="line">while(s5 == 0);</span><br><span class="line">l3 = 1;</span><br><span class="line">&#125;</span><br><span class="line">else if(stat_k == 2)</span><br><span class="line">&#123;</span><br><span class="line">l5 = 0;</span><br><span class="line">while(s5 == 0);</span><br><span class="line">l5 = 1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="矩阵键盘扫描基本原理与应用"><a href="#矩阵键盘扫描基本原理与应用" class="headerlink" title="矩阵键盘扫描基本原理与应用"></a>矩阵键盘扫描基本原理与应用</h3><p>· 首先把J5的引脚接到1-2处</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">#include &quot;reg52.h&quot;</span><br><span class="line"></span><br><span class="line">sfr p4 = 0xc0;</span><br><span class="line"></span><br><span class="line">sbit r1 = p3^0;</span><br><span class="line">sbit r2 = p3^1;</span><br><span class="line">sbit r3 = p3^2;</span><br><span class="line">sbit r4 = p3^3;</span><br><span class="line"></span><br><span class="line">sbit c4 = p3^4;</span><br><span class="line">sbit c5 = p3^5;</span><br><span class="line">sbit c6 = p4^2;</span><br><span class="line">sbit c7 = p4^4;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void selecthc573(unsigned char channel)</span><br><span class="line">&#123;</span><br><span class="line">switch(channel)</span><br><span class="line">&#123;</span><br><span class="line">case 4:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0x80;</span><br><span class="line">break;</span><br><span class="line"></span><br><span class="line">case 5:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0xa0;</span><br><span class="line">break;</span><br><span class="line"></span><br><span class="line">case 6:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0xc0;</span><br><span class="line">break;</span><br><span class="line"></span><br><span class="line">case 7:</span><br><span class="line">p2 = (p2 &amp; 0x1f) | 0xe0;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void displaykeynum(unsigned char value)</span><br><span class="line">&#123;</span><br><span class="line">selecthc573(6);</span><br><span class="line">p0 = 0x01;</span><br><span class="line">selecthc573(7);</span><br><span class="line">p0 = value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">unsigned char key_num;</span><br><span class="line">void scankeymulti()</span><br><span class="line">&#123;</span><br><span class="line">r1 = 0;</span><br><span class="line">r2 = r3 = r4 = 1;</span><br><span class="line">c1 = c2 = c3 = c4 =1;</span><br><span class="line">if(c1 == 0)</span><br><span class="line">&#123;</span><br><span class="line">while(c1 == 0);</span><br><span class="line">key_num = 0;</span><br><span class="line">dsiplaykeynum(SMG_duanma(key_num));</span><br><span class="line">&#125;</span><br><span class="line">else if(c2 == 0)</span><br><span class="line">&#123;</span><br><span class="line">while (c2 == 0)</span><br><span class="line">key_num = 1;</span><br><span class="line">dsiplaykeynum(SMG_duanma(key_num));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">while(1)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="中断相关的基础概念"><a href="#中断相关的基础概念" class="headerlink" title="中断相关的基础概念"></a>中断相关的基础概念</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数学建模快速入门</title>
      <link href="/2022/12/11/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
      <url>/2022/12/11/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="·-赛题选择"><a href="#·-赛题选择" class="headerlink" title="· 赛题选择"></a>· 赛题选择</h2><p>先找资料比较多的<br>啥也不会就选C题<br>开始后6小时内定题<br>做不出来也要瞎编出一个论文交上去</p><h2 id="·-搜索技巧"><a href="#·-搜索技巧" class="headerlink" title="· 搜索技巧"></a>· 搜索技巧</h2><p>完全搜索匹配——带上“ ”<br>标题含关键词 intitle: 参数标定<br>搜索文档： filetype：文件格式</p><h2 id="·-查文献的技巧"><a href="#·-查文献的技巧" class="headerlink" title="· 查文献的技巧"></a>· 查文献的技巧</h2><p>知网论文 / 高级检索</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数学建模快速入门</title>
      <link href="/2022/12/11/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/matlab/"/>
      <url>/2022/12/11/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/matlab/</url>
      
        <content type="html"><![CDATA[<hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯单片机学习(c51)</title>
      <link href="/2022/11/29/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%8D%95%E7%89%87%E6%9C%BA/c51/"/>
      <url>/2022/11/29/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%8D%95%E7%89%87%E6%9C%BA/c51/</url>
      
        <content type="html"><![CDATA[<h2 id="单片机内部的基本结构"><a href="#单片机内部的基本结构" class="headerlink" title="单片机内部的基本结构"></a>单片机内部的基本结构</h2><p>· 一个微控制器系统<br>· 内核+外设<br>· 内核通过寄存器控制外设；外设通过中断通知内核；内核外核之间通过总线传输数据和地址；<br>· 基本设计：读写寄存器、处理中断源、访问内部总线</p><h2 id="内容框架"><a href="#内容框架" class="headerlink" title="内容框架"></a>内容框架</h2><p>· LED指示灯的基本控制<br>· 蜂鸣器和继电器的基本控制<br>· 共阳数码管的静/动态显示<br>· 独立按键的基本操作和扩展应用<br>· 矩阵案件的扫描原理和基本应用<br>· 中断系统与外部中断的应用<br>· 定时器的基本原理和应用、<br>· 定时器综合案例<br>· PWM脉冲宽调制信号<br>· 串口通信的基本原理与应用<br>· 串口通信的进阶应用案例<br>· IO扩展技术与存储器映射</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>英语四级</title>
      <link href="/2022/11/22/%E8%8B%B1%E8%AF%AD%E5%9B%9B%E7%BA%A7/English4/"/>
      <url>/2022/11/22/%E8%8B%B1%E8%AF%AD%E5%9B%9B%E7%BA%A7/English4/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>K210测距模块使用</title>
      <link href="/2022/11/20/K210/%E6%B5%8B%E8%B7%9D%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/11/20/K210/%E6%B5%8B%E8%B7%9D%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 外挂标签的学习</title>
      <link href="/2022/11/13/Blog-test/%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/11/13/Blog-test/%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>在这里进行外挂标签的语法学习<br>配合Markdown的语法学习可以完善我们Bolg</p><h2 id="行内文本样式"><a href="#行内文本样式" class="headerlink" title="行内文本样式"></a>行内文本样式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><h2 id="行内文本-span"><a href="#行内文本-span" class="headerlink" title="行内文本 span"></a>行内文本 span</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line">- 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<span class='p center logo large'>Volantis</span><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><p>=====&gt;  to be continue…</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Markdown语法学习</title>
      <link href="/2022/11/12/Blog-test/Markdown%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/11/12/Blog-test/Markdown%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="学习使用MarkDown语法来写博客"><a href="#学习使用MarkDown语法来写博客" class="headerlink" title="学习使用MarkDown语法来写博客"></a>学习使用MarkDown语法来写博客</h2><p>这篇的主要内容就是进行MarkDown语法的学习</p><ol><li>标题<br>——————————<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6>——————————</li></ol><h2 id="2-斜体"><a href="#2-斜体" class="headerlink" title="2. 斜体"></a>2. 斜体</h2><p> <em>斜体</em>     格式：<em> …. </em></p><h2 id="3-加粗"><a href="#3-加粗" class="headerlink" title="3. 加粗"></a>3. 加粗</h2><p><strong>加粗</strong>    格式: <strong> … </strong></p><h2 id="4-标记"><a href="#4-标记" class="headerlink" title="4. 标记"></a>4. 标记</h2><p>==标记==   格式: == … ==</p><h2 id="5-引用"><a href="#5-引用" class="headerlink" title="5. 引用"></a>5. 引用</h2><blockquote><pre><code> 格式: &gt;  ...</code></pre></blockquote><h2 id="6-任务列表"><a href="#6-任务列表" class="headerlink" title="6. 任务列表"></a>6. 任务列表</h2><ul><li>[ ] 计划任务</li><li>[x] 完成任务</li></ul><h2 id="图片引用"><a href="#图片引用" class="headerlink" title="图片引用"></a>图片引用</h2><p>语法说明：! [ 图片 Alt ] (图片地址 “图片 Title”)<br><img src="https://bu.dusays.com/2022/11/20/637a06317d4fb.png" alt="初音" title="初音"></p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>语法说明：<br>不管是哪种方式，第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。<br>列于列之间用管道符|隔开。原生方式的表格每一行的两边也要有管道符。<br>第二行还可以为不同的列指定对齐方向。默认为左对齐，在-右边加上:就右对齐。</p><div class="table-container"><table><thead><tr><th>列表头</th><th>下面是表头分割线</th></tr></thead><tbody><tr><td>项目1</td><td>项目1</td></tr><tr><td>项目2</td><td>项目2</td></tr><tr><td>项目3</td><td>项目3</td></tr></tbody></table></div><p>!注意：这里的“-”长度任意，但是一列的分割线不能少于2个“-”</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>法一:缩进 4 个空格或是 1 个制表符<br>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p><pre><code>#include&lt;stdio.h&gt; int main(void)&#123;    printf(&quot;Hello world\n&quot;);&#125;</code></pre><p>法二:用六个`包裹多行代码<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;Hello world\n&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ros底层通讯协议</title>
      <link href="/2022/11/12/ros%E5%B0%8F%E8%BD%A6/ros%E9%80%9A%E8%AE%AF%E5%8D%8F%E8%AE%AE/"/>
      <url>/2022/11/12/ros%E5%B0%8F%E8%BD%A6/ros%E9%80%9A%E8%AE%AF%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<p>//////////////////////<br>数据构成<br>//////////////////////<br>串口波特率:115200,1停止位，8数据位，无校验</p><h2 id="约定"><a href="#约定" class="headerlink" title="约定:"></a>约定:</h2><p>1.上位机往下位机发送的消息，功能码为奇数，下位机往上位机发送，功能码为偶数<br>2.帧长度为整个数据包长度，包括从帧头到校验码全部数据<br>3.ID为下位机编号，为级联设计预留<br>4.预留位，为后续协议扩展预留<br>5.CRC校验为一字节，校验方式为CRC-8/MAXIM<br>6.线速度单位为m/s，角速度单位为rad/s（弧度制），角度单位为度（角度制）</p><p>帧头   帧长度     ID       功能码   数据            预留位  CRC校验<br>0x5a   0x00         0x01  0x00          0xXX…0xXX   0x00    0xXX</p><h2 id="帧头："><a href="#帧头：" class="headerlink" title="帧头："></a>帧头：</h2><p>1Byte 0x5a 固定值</p><h2 id="帧长度："><a href="#帧长度：" class="headerlink" title="帧长度："></a>帧长度：</h2><p>帧头(1 Byte)+帧长度(1 Byte)+ID(1 Byte)+功能码(1 Byte)+数据(0~250Byte))+预留位(1 Byte)+CRC校验(1 Byte)</p><h2 id="功能码："><a href="#功能码：" class="headerlink" title="功能码："></a>功能码：</h2><p>1Byte控制板端发送的功能码为偶数,控制板端接收的功能码为奇数</p><h2 id="数据："><a href="#数据：" class="headerlink" title="数据："></a>数据：</h2><p>长度和内容具体参照各功能码定义<br>预留位：<br>目前设置为0x00，为将来协议可能的扩展预留<br>CRC校验：<br>1Byte，校验方式为CRC-8/MAXIM<br>（参考在线计算网站：<a href="http://www.ip33.com/crc.html）">http://www.ip33.com/crc.html）</a></p><p>功能码:</p><p>0x01<br>上位机向下位机发送速度控制指令，数据长度为6Byte，数据为X轴方向速度<em>1000(int16_t) + Y轴方向速度</em>1000(int16_t) + Z轴角速度*1000(int16_t)<br>数据格式为：<br>Byte1   Byte2   Byte3   Byte4   Byte5   Byte6<br>X MSB   X LSB   Y MSB   Y LSB   Z MSB   Z LSB<br>例:5A 0C 01 01 01 F4 00 00 00 00 00 56 (底盘以0.5m/s的速度向前运动)</p><p>0x02<br>下位机回复上位机的速度控制指令，数据长度1Byte，仅在速度设置失败时候回复，正常时无回复<br>数据格式为：<br>Byte1</p><p>0x03<br>上位机向下位机发送速度查询指令，数据长度为0Byte<br>例:5A 06 01 03 00 DF</p><p>0x04<br>下位机上报当前速度，数据长度为6Byte，数据为X轴方向速度<em>1000(int16_t) + Y轴方向速度</em>1000(int16_t) + Z轴角速度*1000(int16_t)<br>数据格式为：<br>Byte1   Byte2   Byte3   Byte4   Byte5   Byte6<br>X MSB   X LSB   Y MSB   Y LSB   Z MSB   Z LSB</p><p>0x05<br>上位机向下位机查询IMU数据，数据长度为0Byte<br>例:5A 06 01 05 00 75</p><p>0x06<br>下位机上报当IMU数据，数据长度为6Byte，数据为Pitch<em>1000(int16_t) + Roll</em>1000(int16_t) + Yaw*1000(int16_t)<br>数据格式为：<br>Byte1       Byte2       Byte3       Byte4       Byte5        Byte6<br>Pitch MSB   Pitch LSB   Roll MSB       Roll LSB       Yaw MSB       Yaw LSB</p><p>0x07<br>上位机向下位机查询电池信息，数据长度为0Byte<br>例:5A 06 01 07 00 E4 </p><p>0x08<br>下位机上报电池信息，数据长度为4Byte，数据为电压Voltage<em>1000(uint16_t) + 电流Current</em>1000(uint16_t)<br>数据格式为：<br>Byte1           Byte2           Byte3           Byte4<br>Voltage MSB        Voltage LSB        Current MSB        Current LSB</p><p>0x09<br>上位机向下位机获取里程计信息<br>例:5A 06 01 09 00 38</p><p>0x0a<br>下位机上报里程计信息，数据长度为6Byte，数据为线速度<em>1000、角速度</em>1000，角度*100<br>Byte1   Byte2   Byte3     Byte4     Byte5   Byte6<br>X MSB   X LSB   Yaw MSB   Yaw LSB   Z MSB   Z LSB</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客及问题归纳</title>
      <link href="/2022/11/11/2022-11-11-%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/11/11/2022-11-11-%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="文章与页面配置的问题"><a href="#文章与页面配置的问题" class="headerlink" title="文章与页面配置的问题"></a>文章与页面配置的问题</h2><p> Markdown 文件，也就是md文件，front-master 也就是用于文章配置<br> Page Front-matter 用于页面配置<br> Post Front-matter 用于文章页配置<br> 如果标注可选的参数，可根据自己需要添加，不用全部都写在markdown里</p><h2 id="本地出现的文章在修改过后可以正确进入了，但是已经进入引入自己域名的网址，却没有办法进入新的文章，一直指向第一篇文章"><a href="#本地出现的文章在修改过后可以正确进入了，但是已经进入引入自己域名的网址，却没有办法进入新的文章，一直指向第一篇文章" class="headerlink" title="本地出现的文章在修改过后可以正确进入了，但是已经进入引入自己域名的网址，却没有办法进入新的文章，一直指向第一篇文章"></a>本地出现的文章在修改过后可以正确进入了，但是已经进入引入自己域名的网址，却没有办法进入新的文章，一直指向第一篇文章</h2><p> 在尝试后发现，不管如何修改，一直都会进入同一个 html<br> 在视频过后我查看了一下，可能需要重新部署github ，所以我们在vscode的这一块<br> 使用 hexo c / hexo g / hexo d，进行重新部署<br> hexo c1;hexo s 刷新，也是发现我们成功的进入到我们的文章里了</p><h2 id="关于图库问题"><a href="#关于图库问题" class="headerlink" title="关于图库问题"></a>关于图库问题</h2><p>个人搭建图库存在的问题是没有办法使用Picgo进行保存，不知道出了什么问题，一直上传失败，所以直接用别人的图库 (去不图库)</p><p>2022.11.22</p><h2 id="关于部署失败的问题"><a href="#关于部署失败的问题" class="headerlink" title="关于部署失败的问题"></a>关于部署失败的问题</h2><p>更改完图片之后，网址的更新就无法进行，正在测试。<br>只有背景的图片是没有被替换的，我们现在把图片换成文章页面.测试过后成功替换，只有背景是没有被替换的，我们找一张新的图片</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
